version: 2
image_name: starter
apis:
- agents
- datasetio
- eval
- files
- inference
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: gemini
    provider_type: remote::gemini
    config:
      api_key: dummy-to-stop-llama-stack-from-complaining-even-though-we-use-vertex-and-not-gemini-directly
  vector_io: []
  files: []
  safety: []
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: postgres
        host: ${env.ASSISTED_CHAT_POSTGRES_HOST}
        port: ${env.ASSISTED_CHAT_POSTGRES_PORT}
        db: ${env.ASSISTED_CHAT_POSTGRES_NAME}
        user: ${env.ASSISTED_CHAT_POSTGRES_USER}
        password: ${env.ASSISTED_CHAT_POSTGRES_PASSWORD}
        ssl_mode: disable
        ca_cert_path: /etc/tls/ca-bundle.pem
      responses_store:
        type: postgres
        host: ${env.ASSISTED_CHAT_POSTGRES_HOST}
        port: ${env.ASSISTED_CHAT_POSTGRES_PORT}
        db: ${env.ASSISTED_CHAT_POSTGRES_NAME}
        user: ${env.ASSISTED_CHAT_POSTGRES_USER}
        password: ${env.ASSISTED_CHAT_POSTGRES_PASSWORD}
        ssl_mode: disable
        ca_cert_path: /etc/tls/ca-bundle.pem
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "assisted-chat"
      sinks: console,sqlite
      sqlite_db_path: ${STORAGE_MOUNT_PATH}/sqlite/trace_store.db
  eval: []
  datasetio: []
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  - provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
    config: {}
  tool_runtime:
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
metadata_store:
  type: sqlite
  db_path: ${STORAGE_MOUNT_PATH}/sqlite/registry.db
inference_store:
  type: postgres
  host: ${env.ASSISTED_CHAT_POSTGRES_HOST}
  port: ${env.ASSISTED_CHAT_POSTGRES_PORT}
  db: ${env.ASSISTED_CHAT_POSTGRES_NAME}
  user: ${env.ASSISTED_CHAT_POSTGRES_USER}
  password: ${env.ASSISTED_CHAT_POSTGRES_PASSWORD}
  ssl_mode: disable
  ca_cert_path: /etc/tls/ca-bundle.pem
models: []
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: mcp::assisted
  provider_id: model-context-protocol
  mcp_endpoint:
    uri: "http://localhost:8000/mcp"
server:
  port: 8321
