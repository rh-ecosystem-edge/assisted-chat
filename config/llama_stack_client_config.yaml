version: 2
image_name: starter
apis:
- agents
- datasetio
- eval
- files
- inference
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
providers:
  inference:
  - provider_id: gemini
    provider_type: remote::gemini
    config:
      api_key: ${env.GEMINI_API_KEY:=}
  vector_io: []
  files: []
  safety: []
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: postgres
        host: ${env.POSTGRES_HOST:=localhost}
        port: ${env.POSTGRES_PORT:=5432}
        db: ${env.POSTGRES_DB:=llamastack}
        user: ${env.POSTGRES_USER:=llamastack}
        password: ${env.POSTGRES_PASSWORD:=llamastack}
      responses_store:
        type: postgres
        host: ${env.POSTGRES_HOST:=localhost}
        port: ${env.POSTGRES_PORT:=5432}
        db: ${env.POSTGRES_DB:=llamastack}
        user: ${env.POSTGRES_USER:=llamastack}
        password: ${env.POSTGRES_PASSWORD:=llamastack}
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "${env.OTEL_SERVICE_NAME:=\u200B}"
      sinks: ${env.TELEMETRY_SINKS:=console,sqlite}
      sqlite_db_path: ${env.SQLITE_STORE_DIR:=/tmp/.llama/distributions/starter}/trace_store.db
  eval: []
  datasetio: []
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  - provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
    config: {}
  tool_runtime:
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
metadata_store:
  type: sqlite
  db_path: ${env.SQLITE_STORE_DIR:=/tmp/.llama/distributions/starter}/registry.db
inference_store:
  type: postgres
  host: ${env.POSTGRES_HOST:=localhost}
  port: ${env.POSTGRES_PORT:=5432}
  db: ${env.POSTGRES_DB:=llamastack}
  user: ${env.POSTGRES_USER:=llamastack}
  password: ${env.POSTGRES_PASSWORD:=llamastack}
models:
- metadata: {}
  model_id: gemini/gemini-2.0-flash
  provider_id: gemini
  provider_model_id: gemini/gemini-2.0-flash
  model_type: llm
- metadata: {}
  model_id: gemini/gemini-2.5-pro
  provider_id: gemini
  provider_model_id: gemini/gemini-2.5-pro
  model_type: llm
- metadata: {}
  model_id: gemini/gemini-2.5-flash
  provider_id: gemini
  provider_model_id: gemini/gemini-2.5-flash
  model_type: llm
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups:
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
- toolgroup_id: mcp::assisted
  provider_id: model-context-protocol
  mcp_endpoint:
    uri: "http://assisted-service-mcp:8000/mcp"
server:
  port: 8321
